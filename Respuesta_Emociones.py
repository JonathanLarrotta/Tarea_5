# -*- coding: utf-8 -*-
"""Emociones_en_Final_de_Semestre.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PN5D1S6f8AeSjo7JdR5OwdK7He4lOlT2
"""

# Instalar las librerías necesarias
!pip install nltk

# Importar librerías
import nltk
from nltk.sentiment import SentimentIntensityAnalyzer
import pandas as pd
import matplotlib.pyplot as plt

# Descargar los recursos necesarios de NLTK
nltk.download('vader_lexicon')

# Inicializar el analizador de sentimientos
sia = SentimentIntensityAnalyzer()

# Agregar palabras personalizadas al léxico de VADER
palabras_personalizadas = {
    "sueños": 4.0,  # Palabra muy positiva
    "increíble": 4.0,
    "alivio": 3.0,
    "emocionado": 3.0,
    "agradecido": 3.0,
    "decepción": -3.0,  # Palabra muy negativa
    "frustrante": -3.0,
    "terrible": -4.0
}

# Actualizar el léxico de VADER con las palabras personalizadas
sia.lexicon.update(palabras_personalizadas)

# Ejemplo de comentarios relacionados con la búsqueda de empleo
comentarios = [
    "¡Conseguí el trabajo de mis sueños! Estoy muy emocionado.",
    "La entrevista fue terrible, no me sentí preparado en absoluto.",
    "La empresa me hizo una oferta increíble, estoy muy agradecido.",
    "No pasé la fase de selección, me siento muy decepcionado.",
    "El proceso de reclutamiento fue muy profesional y organizado.",
    "No recibí respuesta después de la entrevista, fue muy frustrante.",
    "Me encantó la cultura de la empresa, todos fueron muy amables.",
    "El salario ofrecido es muy bajo, no vale la pena.",
    "Tuve una entrevista técnica muy difícil, pero aprendí mucho.",
    "Finalmente recibí una oferta después de meses de búsqueda, ¡qué alivio!"
]

# Analizar el sentimiento de cada comentario
resultados = []

for comentario in comentarios:
    puntaje = sia.polarity_scores(comentario)  # Obtener el puntaje de sentimientos
    # Ajustar los umbrales de clasificación
    if puntaje['compound'] >= 0.05:  # Más sensible a positivos
        sentimiento = "Positivo"
    elif puntaje['compound'] <= -0.05:  # Más sensible a negativos
        sentimiento = "Negativo"
    else:
        sentimiento = "Neutro"

    resultados.append({
        "Comentario": comentario,
        "Puntaje de Sentimiento": puntaje,
        "Sentimiento": sentimiento
    })

# Convertir los resultados a un DataFrame de Pandas
df_resultados = pd.DataFrame(resultados)

# Mostrar los resultados
print(df_resultados)